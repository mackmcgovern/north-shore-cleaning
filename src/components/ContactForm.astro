---
// component: ContactForm
---

<form
  class='contact-form px-4 py-12 sm:px-16 sm:py-16 border-4 border-opacity-20 shadow-sm border-teal-main bg-teal-main bg-opacity-5'>
  <div>
    <label for='name'>Name:</label>
    <input type='text' id='name' name='name' required />
  </div>
  <div>
    <label for='email'>Email:</label>
    <input type='email' id='email' name='email' required />
  </div>
  <div>
    <label for='phone'>Phone Number:</label>
    <input type='tel' id='phone' name='phone' required />
  </div>
  <div>
    <label for='subject'>Subject:</label>
    <input type='text' id='subject' name='subject' required />
  </div>
  <div>
    <label for='message'>Message:</label>
    <textarea id='message' name='message' required></textarea>
  </div>
  <div>
    <div class='form-errors my-4'></div>

    <button
      type='submit'
      class='btn btn-light bg-accent-blue self-center mt-6 w-[15rem] text-center submit-btn'
      >Submit</button
    >
  </div>
</form>

<style>
  .contact-form {
    @apply flex flex-col gap-4 max-w-6xl w-full md:w-[90%] lg:w-[80%];
  }

  .contact-form > div {
    @apply flex flex-col;
  }

  .contact-form label {
    @apply text-teal-main font-light;
  }

  .contact-form input,
  .contact-form textarea {
    @apply border border-teal-main border-opacity-50 text-teal-main;
  }

  .contact-form input:focus,
  .contact-form textarea:focus {
    @apply bg-accent-blue bg-opacity-30;
  }

  .contact-form textarea {
    @apply h-[8rem];
  }

  .submit-btn:disabled {
    @apply opacity-50 cursor-default hover:shadow-none;
  }
</style>

<script>
  import { validateEmail } from '../../src/utils/validateEmail'
  import { validateInput } from '../../src/utils/validateInput'
  import { validateName } from '../../src/utils/validateName'


  const contactForm = document.querySelector('.contact-form') as HTMLFormElement

  // let name = document.getElementById('name')
  // let email = document.getElementById('email')
  // let phone = document.getElementById('phone')
  // let subject = document.getElementById('subject')
  // let message = document.getElementById('message')

  const submitBtn = document.querySelector('.submit-btn') as HTMLButtonElement
  const formErrors = document.querySelector('.form-errors') as HTMLDivElement

  contactForm.addEventListener('submit', e => {
    e.preventDefault()

    submitBtn.disabled = true
    submitBtn.textContent = 'Sending...'

    // let ffrmData = {
    //   name: name.value,
    //   email: email.value,
    //   phone: phone.value,
    //   subject: subject.value,
    //   message: message.value,
    // }


    contactForm.addEventListener('submit', async function(event) {
      event.preventDefault()

    let formData = new FormData(this)

    // Create an object to hold the trimmed data
    const data: { [key: string]: any } = {}

    formData.forEach((value, key) => {
      if (typeof value === 'string') {
        data[key] = value.trim()
      } else {
        data[key] = value
      }
    })

    const trimmedData = {
      name: data['name'],
      email: data['email'],
      subject: data['subject'],
      message: data['message'],
    }


    // Validate the form data
    if(!validateName(trimmedData.name)) {
      formErrors.innerHTML = '<p class="text-sm text-red-600">Please enter a valid name</p>'
      // submitBtn.disabled = false
      // submitBtn.textContent = 'Submit'
      return
    }

      if(!validateEmail(trimmedData.email)) {
        formErrors.innerHTML = '<p class="text-sm text-red-600">Please enter a valid email</p>'
        // submitBtn.disabled = false
        // submitBtn.textContent = 'Submit'
        return
      }

      if(!validateInput(trimmedData.subject)) {
        formErrors.innerHTML = '<p class="text-sm text-red-600">Please enter a valid subject</p>'
        // submitBtn.disabled = false
        // submitBtn.textContent = 'Submit'
        return
      }

      if(!validateInput(trimmedData.message)) {
        formErrors.innerHTML = '<p class="text-sm text-red-600">Please enter a valid message</p>'
        // submitBtn.disabled = false
        // submitBtn.textContent = 'Submit'
        return
      }


      // send data to netlify function 

    const response = await fetch('/netlify/functions/contact-form', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(trimmedData),
    })
    const result = await response.json()

    if (response.ok) {
      // setLoadingState(false, 'success')
      contactForm.reset()
    } else {
      // message.classList.add('error')
      // message.textContent = result.message
      // setLoadingState(false, 'error')
    }
  })


// ENND Of FUNCTion
  })
    

  
</script>
