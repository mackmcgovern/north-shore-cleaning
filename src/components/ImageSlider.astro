---
import { Image } from 'astro:assets'
---

<div class='slider-wrapper pb-6'>
  <div class='slider-container'>
    <div class='slider'></div>
    <button class='slider-button prev-button'>&#8249;</button>
    <button class='slider-button next-button'>&#8250;</button>
  </div>
</div>

<style>
  .slider-wrapper {
    position: relative;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }

  .slider-container {
    position: relative;
    overflow: hidden;
    max-width: 1000px;
    margin: auto;
  }

  .slider {
    display: flex;
    transition: transform 300ms ease-in;
  }

  .slider-button {
    position: absolute;
    top: 50%;
    transform: translateY(calc(50% - 15px));
    width: 40px;
    height: 40px;
    background-color: #333333;
    color: #ffffff;
    font-size: 20px;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .slider-button:hover {
    opacity: 1;
  }

  .prev-button {
    left: 20px;
  }

  .next-button {
    right: 20px;
  }
</style>

<script>
  // hospitality
  import Cabin from '../assets/hospitality-cabin.jpg'
  import Bed from '../assets/hospitality-bed.jpg'
  // commercial
  import Clinic from '../assets/commercial-clinic.jpg'
  import Lobby from '../assets/commercial-lobby.jpg'
  import Office from '../assets/commercial-office.jpg'

  let width = document.documentElement.clientWidth

  window.addEventListener('resize', function () {
    width = document.documentElement.clientWidth
    createSlides()
  })

  const slideData = [
    { title: 'Hospitality Cleaning', image: Cabin },
    { title: 'Hospitality Cleaning', image: Bed },
    { title: 'Commercial Cleaning', image: Clinic },
    { title: 'Commercial Cleaning', image: Office },
    { title: 'Commercial Cleaning', image: Lobby },
  ]

  // Clone first and last image
  slideData.push(slideData[0])
  slideData.unshift(slideData[slideData.length - 2])

  const slider = document.querySelector('.slider') as HTMLDivElement
  const sliderContainer = document.querySelector(
    '.slider-container'
  ) as HTMLDivElement
  const nextBtn = document.querySelector('.next-button') as HTMLButtonElement
  const prevBtn = document.querySelector('.prev-button') as HTMLButtonElement
  let isMoving = false

  let slideIndex = 1

  function moveSlides() {
    slider.style.transform = `translateX(-${slideIndex * 100}%)`
  }

  function moveHandler(direction) {
    isMoving = true
    slider.style.transition = `transform 300ms ease`
    direction !== 'right' ? (slideIndex -= 1) : (slideIndex += 1)
    moveSlides()
  }

  function createSlides() {
    let slides
    {
      slides = slideData.map(
        slide =>
          `
    <div class='slide grow shrink-0 basis-full'>
      <p
        class='bg-teal-md py-4 text-white text-center tracking-widest text-lg service-title'>
      ${slide.title}
      </p>
      <div class='relative'>
        <div class='absolute top-0 left-0 w-full h-full bg-teal-md bg-opacity-20'>
      </div>
        <div class='slider-images relative'>
          <div class='group'>
            <div class='flex'>
              <Image src=${slide.image.src} alt='' class='image-1 w-full object-cover aspect-[4/2.4]' />
            </div>
          </div>
        </div>
      </div>
    </div>
    `
      )
    }

    slider.innerHTML = slides.join('')

    moveSlides()
  }

  // handle right click
  nextBtn.addEventListener('click', function () {
    if (isMoving === false) {
      moveHandler('right')
    }
  })

  // handle left click
  prevBtn.addEventListener('click', function () {
    if (isMoving === false) {
      moveHandler('')
    }
  })

  slider.addEventListener('transitionend', () => {
    isMoving = false
    if (slideIndex === 0) {
      slider.style.transition = `none`
      slideIndex = slideData.length - 2
      moveSlides()
    } else if (slideIndex === slideData.length - 1) {
      slider.style.transition = `none`
      slideIndex = 1
      moveSlides()
    }
  })

  createSlides()

  // Automate slider
  // let timer

  // function startSlider() {
  //   timer = setInterval(() => {
  //     moveHandler('right')
  //   }, 4200) // Auto change every 4 seconds
  // }

  // function stopSlider() {
  //   clearInterval(timer)
  // }

  // startSlider()

  // const sliderBtns = [nextBtn, prevBtn]

  // sliderBtns.forEach(btn => btn.addEventListener('mouseenter', () => {
  //   stopSlider()
  // }))

  // sliderBtns.forEach(btn => btn.addEventListener('mouseleave', () => {
  //   startSlider()
  // }))

  // document.addEventListener('visibilitychange', () => {
  //   if (document.hidden) {
  //     // Page is not visible, pause slider
  //     stopSlider()
  //   } else {
  //     // Page is visible again, resume slider
  //     startSlider()
  //   }
  // })
</script>
